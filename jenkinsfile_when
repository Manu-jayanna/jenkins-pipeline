pipeline{
    agent none
    parameters{
    
        choice(name: 'ENV', choices: ['dev', 'test', 'Stagging', 'production'], description: 'Choose the environment to deploy ?')
        booleanParam defaultValue: true, description: 'Whether to deploy or not?', name: 'BUILD'
    }

    stages{

        stage('checkout'){
            agent{
                label 'slave1'
            }
            steps{
                checkout scmGit(branches: [[name: '*/main']], 
                extensions: [], 
                userRemoteConfigs: [[credentialsId: 'my_github', url: 'https://github.com/Manu-jayanna/jenkins-pipeline.git']])
            }
        }
        stage('Build1'){
            agent{
                label 'slave2'
            }
            steps{
                when{
<<<<<<< HEAD
                    expression{return params.ENV == 'dev' && params.BUILD}
                         
=======
                    allOf{
                        expression{return params.ENV == 'dev'}
                        expression{return params.BUILD == true}
                    }
>>>>>>> 993a8f0c86a260562a3fefd780d3be048e6fd446
                }
                echo "Groovy ----> ${params.ENV}"
                sh '''
                   echo "shell ------> ${ENV}"
                '''
            }
        }
        stage('Build2'){
            agent{
                label 'slave2'
            }
            steps{
                when{
<<<<<<< HEAD
                    
                    expression{return params.ENV == 'Stagging'&& params.BUILD}
                    
=======
                    allOf{
                        expression{return params.ENV == 'Stagging'}
                        expression{return params.BUILD == true}
                    }
>>>>>>> 993a8f0c86a260562a3fefd780d3be048e6fd446
                }
                echo "Groovy ----> ${params.ENV}"
                sh '''
                   echo "shell ------> ${ENV}"
                '''
            }
        }
        stage('Build3'){
            agent{
                label 'slave2'
            }
            steps{
                when{
<<<<<<< HEAD
                    expression{return params.ENV == 'test' && params.BUILD}
=======
                    allOf{
                        expression{return params.ENV == 'test'}
                        expression{return params.BUILD == true}
                    }
>>>>>>> 993a8f0c86a260562a3fefd780d3be048e6fd446
                }
                echo "Groovy ----> ${params.ENV}"
                sh '''
                   echo "shell ------> ${ENV}"
                '''
            }
        }
        stage('Build4'){
            agent{
                label 'slave1'
            }
            when{
<<<<<<< HEAD
              
                expression{return params.ENV == 'production' && params.BUILD}
                
=======
                allOf{
                    expression{return params.ENV == 'production'}
                    expression{return params.BUILD == true}
                }
>>>>>>> 993a8f0c86a260562a3fefd780d3be048e6fd446
            }
            steps{
                echo "Groovy ----> ${params.ENV}"
                sh '''
                   echo "shell ------> ${ENV}"
                '''
            }
        }
    }
}