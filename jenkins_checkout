pipeline{
    agent none
    parameters{
    
        choice(name: 'ENV', choices: ['dev', 'test', 'Stagging', 'production'], description: 'Choose the environment to deploy ?')
        booleanParam defaultValue: true, description: 'Whether to deploy or not?', name: 'BUILD'
    }

    stages{

        stage('checkout1'){
            agent{
                label 'slave1'
            }
            steps{
                checkout scmGit(branches: [[name: '*/main']], 
                extensions: [], 
                userRemoteConfigs: [[credentialsId: 'my_github', url: 'https://github.com/Manu-jayanna/jenkins-pipeline.git']])
            }
        }
        stage('Build1'){
            agent{
                label 'slave2'
            }
            when{
                    expression{return params.ENV == 'dev' && params.BUILD}
                         
                }
            steps{
                
                echo "Groovy ----> ${params.ENV}"
                sh '''
                   echo "shell ------> ${ENV}"
                '''
            }
        }
        stage('Build2'){
            agent{
                label 'slave2'
            }
            when{
                    
                    expression{return params.ENV == 'Stagging'&& params.BUILD}
                    
                }
            steps{
                
                echo "Groovy ----> ${params.ENV}"
                sh '''
                   echo "shell ------> ${ENV}"
                '''
            }
        }
        stage('Build3'){
            agent{
                label 'slave2'
            }
            when{
                    expression{return params.ENV == 'test' && params.BUILD}
                }
            steps{
                
                echo "Groovy ----> ${params.ENV}"
                sh '''
                   echo "shell ------> ${ENV}"
                '''
            }
        }
        stage('Build4'){
            agent{
                label 'slave1'
            }
            when{
              
                expression{return params.ENV == 'production' && params.BUILD}
                
            }
            steps{
                echo "Groovy ----> ${params.ENV}"
                sh '''
                   echo "shell ------> ${ENV}"
                '''
            }
        }
        stage('checkout2'){
            agent{
                label 'slave1'
            }
            steps{
                checkout scmGit(branches: [[name: '*/main']], 
                extensions: [], 
                userRemoteConfigs: [[credentialsId: 'my_github', url: 'https://github.com/Manu-jayanna/Repo.git']])
            }
        }
        stage('Build'){
            agent{
                label 'slave2'
            }
            when{
                    expression{return params.ENV == 'dev' && params.BUILD}
                         
                }
            steps{
                
                sh '''
                   git branch
                   ls -lrt
                   pwd
                '''
            }
        }
        stage('checkout3'){
            agent{
                label 'slave2'
            }
            steps{
                git (branch: 'main', credentialsId: 'my_github', url: 'https://github.com/Manu-jayanna/my_repository.git')
            }
        }
        stage('test'){
             agent{
                label 'slave2'
            }
            steps{
                sh '''
                   pwd
                   ls -lrt
                   git branch
                '''   
            }

        }
    }
}